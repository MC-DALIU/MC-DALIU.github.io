<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>BLOG现已更换框架</title>
    <link href="/2024/02/07/My-New-Post2/"/>
    <url>/2024/02/07/My-New-Post2/</url>
    
    <content type="html"><![CDATA[<p>本blog于2024年2月7日14:03:17基本完成框架更换工作<br>至于为什么换<br>原来的Gridea加载速度实在是太慢了（雾</p>]]></content>
    
    
    
    <tags>
      
      <tag>blog-event</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Viper4Windows（简称V4W）安装</title>
    <link href="/2024/02/07/My-New-Post1/"/>
    <url>/2024/02/07/My-New-Post1/</url>
    
    <content type="html"><![CDATA[<p><strong>声明：本教程适用于Windows10、8.1、8、7</strong></p><h1 id="1-Windows10教程"><a href="#1-Windows10教程" class="headerlink" title="1 - Windows10教程"></a>1 - Windows10教程</h1><p>Viper4Windows下载地址：<a href="https://pan.xb6868.com/s/ZBgsD">https://pan.xb6868.com/s/ZBgsD</a><br>下载完成后打开，解压包内所有文件到某个地方（记得住就行，最好是空文件夹）<br>32位运行V4W_Setup_x86.exe<br>64位运行V4W_Setup_x64.exe</p><p>运行以后可能会显示安装visual c++ 2010 sp1点next</p><p>然后打开language下拉列表选择Chinese（simplified）点next</p><p>安装完毕后，取消勾选launch viper4windows，勾选launch configurator，点finish，此时安装程序关闭，自动打开configurator</p><p>在configurator中，playback devices选项卡，<strong>点击每个选项，点install，重复这个过程</strong>，直到所有选项右边都显示v4w had been installed<br><em>tips：点完install后窗口可能会消失，这是窗口被放到最底层了，此时让桌面只有这一个窗口即可</em></p><p>接下来运行viper4windows，点菜单栏中的language，设置为中文（简体，中国），此时显示重启v4w对话框，点确定（点完可能不会启动，无伤大雅）</p><p>然后重启电脑，完后在任务栏找到v4w图标单击以打开界面</p><p>然后你就可以放一首歌自己调了（记得打开界面左侧总开关）</p><p><strong>–END–</strong></p><h1 id="2-Windows-8-1、8、7教程"><a href="#2-Windows-8-1、8、7教程" class="headerlink" title="2 - Windows 8.1、8、7教程"></a>2 - Windows 8.1、8、7教程</h1><p>其实和win10是一样的，此时会产生两种结果：<br>1、v4w正常工作，END<br>2、v4w效果没反应，需要以下操作</p><p>安装Equalizer APO<br>下载链接：<a href="https://pan.xb6868.com/s/BqbCw">https://pan.xb6868.com/s/BqbCw</a></p><p><strong>此时先不要安装！</strong></p><p>打开v4w主界面，点击菜单栏中的设置，在弹出的菜单栏中再点击设置</p><p>在打开的对话框中打开“启用APO共存”开关，点击确定</p><p>然后再安装Equalizer APO（没啥特殊选项，直接装就行）</p><p>重启电脑</p><p><strong>–END–</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>V4W</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux 安装教程（以BIOS/MBR为例）</title>
    <link href="/2024/02/07/My-New-Post/"/>
    <url>/2024/02/07/My-New-Post/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>——大家好，我是MC-DALIU。这是我第一次<del>发 (误) 布 (人) 教 (子) 程 (弟)</del> 。<br>:)</strong></p><hr><h2 id="Arch-Linux的安装"><a href="#Arch-Linux的安装" class="headerlink" title="Arch Linux的安装"></a>Arch Linux的安装</h2><h3 id="1-前置工作"><a href="#1-前置工作" class="headerlink" title="(1)前置工作"></a>(1)前置工作</h3><blockquote><p><strong>$ ls &#x2F;sys&#x2F;firmware&#x2F;efi&#x2F;efivars</strong>  </p></blockquote><p>#验证引导模式（如果目录不存在，即为Legacy BIOS引导模式；反之，请使用隔壁以UEFI为例的教程（请参考<a href="https://storm-1614.github.io/20220801/084409/">https://storm-1614.github.io/20220801/084409/</a>））</p><blockquote><p><strong>$ iwctl</strong>  </p></blockquote><p>运行iwctl(如果是有线网络，可直接跳到”ping archlinux.org”这一步) </p><blockquote><p><strong>[iwctl]# device list</strong>   </p></blockquote><p>#列出WiFi设备（一般为wlan0；这里以wlan0为例）   </p><blockquote><p><strong>[iwctl]# station wlan0 scan</strong>  </p></blockquote><p>扫描网络   </p><blockquote><p><strong>[iwctl]# station wlan0 get-networks</strong>   </p></blockquote><p>列出可用网络   </p><blockquote><p><strong>[iwctl]# station wlan0 connect XXX</strong>   </p></blockquote><p>连接到XXX（XXX改成你的WiFi名称）  </p><blockquote><p><strong>[iwctl]# exit</strong>   </p></blockquote><p>退出iwctl</p><blockquote><p><strong>$ ping archlinux.org</strong>  </p></blockquote><p>检查网络连接（如果不停的有输出内容，即为联网成功；按Ctrl+C退出）</p><blockquote><p><strong>$ reflector –country China –save &#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist</strong>  </p></blockquote><p>换源（注意大小写）</p><blockquote><p><strong>$ systemctl stop reflector</strong>  </p></blockquote><p>关闭reflector服务</p><blockquote><p><strong>$ vim &#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist</strong>   </p></blockquote><p>编辑&#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist文件，保留需要的源（一般推荐使用中科大源（USTC）或清华（TUNA）源）   </p><p><strong>如果不会使用vim，记住这三个就行了:<br>按键盘上面的“i”或者“insert”键进入【编辑模式】<br>按‘ESC’退出编辑模式<br>输入【：wq】（冒号别漏了）保存并退出</strong></p><blockquote><p><strong>$ timedatectl set-ntp true</strong>   </p></blockquote><p>同步时间   </p><blockquote><p><strong>$ timedatectl status</strong>   </p></blockquote><p>检查服务状态</p><blockquote><p><strong>$ pacman -Syy</strong>  </p></blockquote><p>同步数据</p><hr><h3 id="2-分区挂载"><a href="#2-分区挂载" class="headerlink" title="(2)分区挂载"></a>(2)分区挂载</h3><p><strong>警告：此过程必须慎重（尤其是对于双硬盘&#x2F;多硬盘等存有大量或高价值数据者），严重者可能会丢失所有数据！</strong></p><p><strong>此处使用SATA硬盘为例</strong></p><p>第一种方法：使用fdisk</p><blockquote><p><strong>$ fdisk &#x2F;dev&#x2F;sda</strong>   </p></blockquote><p>#使用fdisk对sda进行相关操作<br>#步骤如下：   </p><blockquote><p><strong>Command (m for help): o</strong>    </p></blockquote><p>#输入o新建MBR分区表   </p><blockquote><p><strong>Command (m for help): n</strong>   </p></blockquote><p>#输入n创建新分区   </p><blockquote><p><strong>Select (default p): p</strong>   </p></blockquote><p>#这里按Enter键创建主分区（如果想创建逻辑扩展分区请输入e）   </p><blockquote><p><strong>Partition number (1-4, default 1):</strong>   </p></blockquote><p>#这里按Enter键   </p><blockquote><p><strong>First sector (2048-X, default 2048):</strong>    </p></blockquote><p>#这里按Enter键   </p><blockquote><p><strong>Last sector, +&#x2F;-sectors or +&#x2F;-size{K,M,G,T,P} (2048-X, default X): +10G</strong>   </p></blockquote><p>#输入+10G   </p><blockquote><p><strong>Command (m for help): t</strong>    </p></blockquote><p>#输入t更改分区类型   </p><blockquote><p><strong>Hex code or alias (type L to list all): 82</strong>   </p></blockquote><p>#输入82，创建swap分区   </p><blockquote><p><strong>Command (m for help): n</strong>   </p></blockquote><p>#输入n创建新分区，然后一直按Enter键，把剩下的空间全部分配给&#x2F;分区    </p><blockquote><p><strong>Command (m for help): w</strong>    </p></blockquote><p>#输入w写入</p><hr><p>第二种方法：使用CFdisk（方便快捷，推荐新手使用）</p><blockquote><p><strong>$ cfdisk &#x2F;dev&#x2F;sda</strong>  </p></blockquote><p>#进入cfdisk程序，并且对第一块硬盘进行编辑操作（得看你这里是第几块硬盘安装系统，如果是第二块就sdb,第三块就sdc……以此类推。）</p><p>进去以后你会看到你的分区信息。  </p><blockquote><p><strong>操作方法（按键盘上下键选择分区，左右键选择功能</strong>）： </p><p>如果你想删除分区，请将光标移到delete并按下回车。  </p><p>如果你想创建分区则移到列表下的free space按“new”。  </p><p>如果是调节你想要的分区的大小，请按“resize”。</p><p>更改分区类型按“type”。</p></blockquote><p><strong>请准备两个空闲分区来安装Arch Linux。</strong></p><p><strong>准备一个任意大小（建议20GB以上）的分区</strong>（假设为<em>sda1</em>，<strong>请根据实际情况判断</strong>），和一个 <strong>等于你的 RAM（运行内存） 容量的3&#x2F;4或全部 的分区</strong>（假设为<em>sda2</em>，<strong>请根据实际情况判断</strong>）。</p><blockquote><p>将sda1的分区类型改为【83 Linux】<br>sda2的分区类型改为【82 Linux Swap&#x2F;Solaris】</p></blockquote><p>更改完毕后按左右键选择【write】按回车，输入“yes”，再按一下。</p><p><strong>至此，arch的分区工作就完成了。</strong></p><hr><h3 id="3-安装Arch-linux"><a href="#3-安装Arch-linux" class="headerlink" title="(3)安装Arch linux"></a>(3)安装Arch linux</h3><blockquote><p>$ pacstrap &#x2F;mnt linux linux-firmware linux-headers base base-devel vim bash-completion iwd dhcpcd networkmanager</p></blockquote><p>#安装linux &amp; linux-firmware &amp; linux-headers &amp; base &amp; base-devel &amp; vim &amp; bash- completion &amp; iwd &amp; dhcpcd &amp; networkmanager</p><blockquote><p>$ genfstab -U &#x2F;mnt &gt;&gt; &#x2F;mnt&#x2F;etc&#x2F;fstab</p></blockquote><p>#生成&#x2F;mnt&#x2F;etc&#x2F;fstab文件（注意大小写）</p><blockquote><p>$ cat &#x2F;mnt&#x2F;etc&#x2F;fstab </p></blockquote><p>#查看&#x2F;mnt&#x2F;etc&#x2F;fstab文件是否正确（如果不正确，请重新分区、挂载、pacstrap） </p><blockquote><p>$ arch-chroot &#x2F;mnt </p></blockquote><p>#进入目标系统 </p><blockquote><p>$ pacman -Syy </p></blockquote><p>#同步数据 </p><blockquote><p>$ pacman -S grub amd-ucode intel-ucode </p></blockquote><p>#安装grub &amp; amd-ucode或intel-ucode（AMD的CPU安装amd-ucode，intel的CPU安装intel- ucode） </p><blockquote><p>$ lsblk </p></blockquote><p>#查看硬盘名称 </p><blockquote><p>$ grub-install &#x2F;dev&#x2F;sda </p></blockquote><p>#将grub写入sda </p><blockquote><p>$ grub-mkconfig -o &#x2F;boot&#x2F;grub&#x2F;grub.cfg </p></blockquote><p>#生成&#x2F;boot&#x2F;grub&#x2F;grub.cfg文件 </p><blockquote><p>$ systemctl enable iwd dhcpcd </p></blockquote><p>#开机自启iwd服务和dhcpcd服务 </p><blockquote><p>$ passwd root </p></blockquote><p>#设置root密码</p><hr><h3 id="4-重启并进入下一步工作"><a href="#4-重启并进入下一步工作" class="headerlink" title="(4)重启并进入下一步工作"></a>(4)重启并进入下一步工作</h3><blockquote><p>$ exit</p></blockquote><p>#退出目标系统 </p><blockquote><p>$ umount &#x2F;mnt </p></blockquote><p>#卸载&#x2F;mnt目录（这里的意思是取消挂载，不是卸载软件的卸载！） </p><blockquote><p>$ reboot </p></blockquote><p>#重启并登陆root（彻底关机那一刻请立即拔出安装U盘，如果觉得手慢就输入poweroff）</p><hr><h2 id="至此，Archlinux的基本安装就已经结束了。但是还没完，因为还要配置、本地化和安装桌面环境等操作。"><a href="#至此，Archlinux的基本安装就已经结束了。但是还没完，因为还要配置、本地化和安装桌面环境等操作。" class="headerlink" title="至此，Archlinux的基本安装就已经结束了。但是还没完，因为还要配置、本地化和安装桌面环境等操作。"></a>至此，Archlinux的基本安装就已经结束了。但是还没完，因为还要配置、本地化和安装桌面环境等操作。</h2><h3 id="Arch-Linux的配置"><a href="#Arch-Linux的配置" class="headerlink" title="Arch Linux的配置"></a>Arch Linux的配置</h3><blockquote><p>$ iwctl   </p></blockquote><p>#运行iwctl（使用方法请参考第一阶段的联网部分；台式机可跳过）  </p><blockquote><p>$ ping archlinux.org   </p></blockquote><p>#检查网络连接（如果不停的有输出内容，即为联网成功；按Ctrl+C终止输出）   </p><blockquote><p>$ vim &#x2F;etc&#x2F;hostname   </p></blockquote><p>#创建&#x2F;etc&#x2F;hostname文件，加入以下内容:<br>arch<br>#将主机名设置为arch    </p><blockquote><p>$ vim &#x2F;etc&#x2F;hosts    </p></blockquote><p>#编辑&#x2F;etc&#x2F;hosts文件，在末尾加入以下内容：<br>127.0.0.1 localhost<br>::1 localhost<br>127.0.1.1 arch.localdomain arch<br>#配置hosts文件，映射IP地址和主机名    </p><blockquote><p>$ timedatectl set-timezone Asia&#x2F;Shanghai &amp;&amp; ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime &amp;&amp; hwclock –systohc   </p></blockquote><p>#设置时区为上海（注意大小写）   </p><blockquote><p>$ timedatectl set-ntp true   </p></blockquote><p>#同步时间   </p><blockquote><p>$ timedatectl status   </p></blockquote><p>#检查服务状态   </p><blockquote><p>$ vim &#x2F;etc&#x2F;skel&#x2F;.bashrc   </p></blockquote><p>#编辑&#x2F;etc&#x2F;skel&#x2F;.bashrc文件，在开头加入以下内容：<br>export EDITOR&#x3D;’vim’<br>#设置vim为默认文本编辑器（注意大小写）   </p><blockquote><p>$ cp -a &#x2F;etc&#x2F;skel&#x2F;. ~   </p></blockquote><p>#复制&#x2F;etc&#x2F;skel目录下的文件到主目录   </p><blockquote><p>$ reboot   </p></blockquote><p>#重启并登陆root   </p><blockquote><p>$ useradd –create-home arch   </p></blockquote><p>#添加普通用户，用户名为arch   </p><blockquote><p>$ passwd arch  </p></blockquote><p>#设置arch密码   </p><blockquote><p>$ usermod -aG adm,wheel,storage arch   </p></blockquote><p>#将arch添加到相应的组中   </p><blockquote><p>$ id arch   </p></blockquote><p>#查看用户组是否添加到相应的组中   </p><blockquote><p>$ visudo   </p></blockquote><p>#设置用户权限，删除%wheel ALL&#x3D;(ALL:ALL) ALL前面的#   </p><blockquote><p>$ reboot   </p></blockquote><p>#重启并登陆root   </p><blockquote><p>$ vim &#x2F;etc&#x2F;locale.gen   </p></blockquote><p>#编辑&#x2F;etc&#x2F;locale.gen文件,删除en_US.UTF-8 UTF-8和zh_CN.UTF-8 UTF-8前面的#   </p><blockquote><p>$ locale-gen   </p></blockquote><p>#生成语言   </p><blockquote><p>$ vim &#x2F;etc&#x2F;locale.conf   </p></blockquote><p>#创建&#x2F;etc&#x2F;locale.conf文件，加入以下内容：<br>LANG&#x3D;en_US.UTF-8<br>#设置语言为en_US.UTF-8（注意大小写）   </p><blockquote><p>$ reboot   </p></blockquote><p>#重启并登陆root </p><blockquote><p>$ vim &#x2F;etc&#x2F;pacman.conf   </p></blockquote><p>#编辑&#x2F;etc&#x2F;pacman.conf文件，删除[multilib]区域的所有#（开启32位支持）并在末尾加入以下内容：<br>[archlinuxcn]<br>Server &#x3D; <a href="https://mirrors.ustc.edu.cn/archlinuxcn/$arch">https://mirrors.ustc.edu.cn/archlinuxcn/$arch</a><br>#添加archlinuxcn源（一般推荐使用中科大源；除了可以添加archlinuxcn源外，还可以添加arch4edu源、blackarch源以及各种私有源，后面会提到；注意大小写）     </p><blockquote><p>$ pacman -Syy   </p></blockquote><p>#同步数据   </p><blockquote><p>$ pacman -S archlinuxcn-keyring   </p></blockquote><p>#安装archlinuxcn-keyring   </p><blockquote><p>$ rm -rf &#x2F;etc&#x2F;pacman.d&#x2F;gnupg &amp;&amp; pacman-key –init &amp;&amp; pacman-key –populate archlinux &amp;&amp; pacman-key –populate archlinuxcn   </p></blockquote><p>#生成新的密钥环并重新签署密钥（安装archlinuxcn-keyring不报错时可跳过）   </p><blockquote><p>$ pacman -Syy     </p></blockquote><p>#再次同步数据   </p><blockquote><p>$ pacman -S mesa lib32-mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon libva-mesa-driver lib32-libva-mesa-driver mesa-vdpau lib32-mesa-vdpau xf86-video- ati   </p></blockquote><p>#安装AMD核显相关驱动   </p><blockquote><p>$ pacman -S mesa lib32-mesa xf86-video-intel vulkan-intel lib32-vulkan-intel   </p></blockquote><p>#安装intel核显相关驱动   </p><blockquote><p>$ pacman -S alsa-utils alsa-plugins alsa-oss alsa-firmware sof-firmware alsa-ucm- conf pulseaudio pulseaudio-alsa pulseaudio-bluetooth  </p></blockquote><p>#安装声音相关驱动   </p><blockquote><p>$ systemctl enable bluetooth   </p></blockquote><p>#开机自启bluetooth服务  </p><blockquote><p>$ reboot   </p></blockquote><p>#重启并登陆root  </p><hr><h3 id="安装KDE桌面环境"><a href="#安装KDE桌面环境" class="headerlink" title="安装KDE桌面环境"></a>安装KDE桌面环境</h3><blockquote><p>$ pacman -Syy   </p></blockquote><p>#同步数据 </p><blockquote><p>$ pacman -S ttf-dejavu ttf-liberation noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-emoji-blob noto-fonts-extra adobe-source-han-sans-otc-fonts adobe- source-han-serif-otc-fonts wqy-bitmapfont wqy-microhei wqy-microhei-lite wqy- zenhei ttf-arphic-extra ttf-arphic-ukai ttf-arphic-uming </p></blockquote><p>#安装字体（请根据需要自行补充，这里只安装常用的包）   </p><blockquote><p>$ pacman -S plasma plasma-meta konsole dolphin kate ark gwenview vlc firefox firefox-i18n-zh-cn packagekit-qt5   </p></blockquote><p>#安装KDE桌面及软件（这里只安装最必要的包，如果想完整使用KDE的各种功能请根据对应提示安装需要的包）  </p><blockquote><p>$ systemctl enable sddm   </p></blockquote><p>#开机自启sddm服务   </p><blockquote><p>$ systemctl disable iwd   </p></blockquote><p>#取消自启iwd服务   </p><blockquote><p>$ systemctl enable NetworkManager   </p></blockquote><p>#开机自启NetworkManager服务（注意大小写）   </p><blockquote><p>$ reboot   </p></blockquote><p>#重启</p><hr><h3 id="KDE的中文化"><a href="#KDE的中文化" class="headerlink" title="KDE的中文化"></a>KDE的中文化</h3><blockquote><p>System Settings（系统设置）&gt;&gt;Regional Settings（区域设置）&gt;&gt;Language（语言）&gt;&gt;Add<br>language（添加语言），找到简体中文后点Add（添加）。<strong>添加简体中文后，将其移到最上面，并删除 其他多余语言，否则会出现汉化不全的情况。上述操作完成后，点击Apply（应用）。</strong><br>System Settings（系统设置）&gt;&gt;Regional Settings（区域设置）&gt;&gt;Formats（格式）&gt;&gt;Region（区 域），选择简体中文（中国）。上述操作完成后，点击Apply（应用）。</p></blockquote><hr><blockquote><p>$ reboot  </p></blockquote><p>重启</p><hr><h3 id="AUR-helper的安装"><a href="#AUR-helper的安装" class="headerlink" title="AUR helper的安装"></a>AUR helper的安装</h3><blockquote><p>$ sudo pacman -S yay   </p></blockquote><p>#安装yay（它在某些时候可以替代pacman来安装软件）  </p><hr><h3 id="添加其他软件源"><a href="#添加其他软件源" class="headerlink" title="添加其他软件源"></a>添加其他软件源</h3><blockquote><p>$ sudo pacman-key –recv-keys 7931B6D628C8D3BA &amp;&amp; sudo pacman-key –finger 7931B6D628C8D3BA &amp;&amp; sudo pacman-key –lsign-key 7931B6D628C8D3BA    </p></blockquote><p>#导入arch4edu源的GPG key   </p><blockquote><p>$ sudo vim &#x2F;etc&#x2F;pacman.conf  </p></blockquote><p>#编辑&#x2F;etc&#x2F;pacman.conf文件，在末尾加入以下内容：<br><strong>[arch4edu] Server &#x3D; <a href="https://mirrors.tuna.tsinghua.edu.cn/arch4edu/$arch">https://mirrors.tuna.tsinghua.edu.cn/arch4edu/$arch</a></strong><br>#添加arch4edu源</p><blockquote><p>$ sudo pacman -Syy  </p></blockquote><p>#同步数据   </p><blockquote><p>$ sudo pacman -S arch4edu-keyring   </p></blockquote><p>#安装arch4edu-keyring  </p><blockquote><p>$ sudo rm -rf &#x2F;etc&#x2F;pacman.d&#x2F;gnupg &amp;&amp; sudo pacman-key –init &amp;&amp; sudo pacman-key –populate archlinux &amp;&amp; sudo pacman-key –populate archlinuxcn &amp;&amp; sudo pacman-key –populate arch4edu   </p></blockquote><p>#生成新的密钥环并重新签署密钥   </p><blockquote><p>$ sudo pacman -Syy   </p></blockquote><p>#再次同步数据</p><hr><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><blockquote><p>$ sudo pacman -Syu    </p></blockquote><p>#更新系统   </p><blockquote><p>$ yay  </p></blockquote><p>#更新系统及AUR软件</p><p><strong>警告：在更新时请先查看ArchLinux官网的新闻公告，看是否需要升级时人为干预，请勿无脑更新。</strong></p><hr><h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><p><del>想再看一遍本教程吗？输入sudo rm -rf &#x2F;*，你会回来的。</del></p>]]></content>
    
    
    
    <tags>
      
      <tag>Arch Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/02/07/hello-world/"/>
    <url>/2024/02/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
